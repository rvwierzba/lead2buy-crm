services:
  db:
    image: postgres:16-alpine
    container_name: lead2buy-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lead2buy-network

  redis:
    image: redis:alpine
    container_name: lead2buy-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lead2buy-network

  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: lead2buy-ollama
    restart: always
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - lead2buy-network

  lead2buy-api:
    build:
      context: ./Lead2Buy.API
      dockerfile: Dockerfile
    container_name: lead2buy-api
    restart: always
    ports:
      - "8080:8080"
    environment:
      - CORS_ORIGIN=https://rvwierzba.github.io
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_KEY=${JWT_KEY}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - REDIS_CONNECTION_STRING=redis:6379
      - OLLAMA_URL=http://ollama:11434
    depends_on:
      - db
      - redis
      - ollama
    networks:
      - lead2buy-network

  nginx:
    image: nginx:latest
    container_name: lead2buy-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./deployment/nginx/lead2buy-api.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - lead2buy-api
    networks:
      - lead2buy-network

networks:
  lead2buy-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  ollama_data: