services:
  db:
    image: postgres:18
    container_name: lead2buy-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - lead2buy-network

  api:
    build: ./Lead2Buy.API
    container_name: lead2buy-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      JWT_KEY: ${JWT_KEY}
    ports:
      - "5000:8080"
    networks:
      - lead2buy-network


  redis:
    image: redis:alpine
    container_name: lead2buy-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - lead2buy-network

  nginx:
    image: nginx:alpine
    container_name: lead2buy-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - lead2buy-network

volumes:
  postgres_data:

networks:
  lead2buy-network:
    driver: bridge
